@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Our.Umbraco.DocTypeGridEditor.Models.PreviewModel>

@using YuzuDelivery.Core;
@using YuzuDelivery.Umbraco.Grid;
@using HtmlAgilityPack;
@{
    try
    {
        var gridItem = Html.GridPartial(Model.Item);
        var htmlDoc = new HtmlDocument();
        var output = Html.RenderYuzu(new RenderSettings()
        {
            Template = string.Format("par{0}", Model.Item.GetType().Name),
            Data = () => { return gridItem.CreateVm(Model.Item, new Dictionary<string, object>() { { "HtmlHelper", Html }, { "Model", Model.Page } }); },
            ShowJson = false
        });

        htmlDoc.LoadHtml(output.ToString());
        var imageNodes = htmlDoc.DocumentNode.SelectNodes("//img");
        var hasImage = imageNodes != null ? imageNodes.Any(x => x.Attributes.Any(y => !string.IsNullOrEmpty(y.Value))) : false;

        if (!string.IsNullOrEmpty(htmlDoc.DocumentNode.InnerText.Trim()) || hasImage)
        {
            <span class="yuzu-back-office" style="all: initial; pointer-events: none;">
                @output
            </span>
        }
        else
        {
            <div class="umb-editor-placeholder dtge-editor-placeholder ng-scope">
                <i class="icon icon-os-x"></i>
                <div class="help-text ng-binding">
                    @Model.ContentType.Alias.FirstCharacterToUpper() : Content is Empty
                    <p>or preview not available</p>
                </div>
            </div>
        }

    }
    catch (Exception ex)
    {
        try
        {
            <div class="umb-editor-placeholder dtge-editor-placeholder ng-scope">
                <i class="icon icon-os-x"></i>
                <div class="help-text ng-binding">
                    @Model.ContentType.Alias.FirstCharacterToUpper() : Preview not available
                </div>
                <div>@ex.Message</div>
            </div>
        }
        catch
        {
            <text>Content is Empty</text>
        }

    }
}